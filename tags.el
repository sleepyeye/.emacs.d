(use-package citre
  :defer t
  :init
  ;; This is needed in `:init' block for lazy load to work.
  (require 'citre-config)

  :general-config
  ;; This will be run after loading the package
  (:keymaps 'citre-mode-map :states 'normal
			"g]" #'citre-jump
			"g[" #'citre-jump-back
			"g." #'citre-ace-peek
			"g`" #'citre-update-this-tags-file
			"g!" #'citre-create-tags-file)
  (:keymaps 'citre-mode-map :states 'visual
			"C-x c j" #'citre-jump
			"C-x c J" #'citre-jump-back
			"C-x c p" #'citre-ace-peek
			"C-x c u" #'citre-update-this-tags-file)

  :hook ((python-mode . citre-mode)
		 (python-ts-mode . citre-mode))
  :config
  (setq
   ;; Set these if readtags/ctags is not in your PATH.
   citre-readtags-program "/opt/homebrew/bin/readtags"
   citre-ctags-program "/opt/homebrew/bin/ctags"
   ;; Set this if you use project management plugin like projectile.  It's
   ;; used for things like displaying paths relatively, see its docstring.
   citre-project-root-function #'projectile-project-root
   ;; Set this if you want to always use one location to create a tags file.
   citre-default-create-tags-file-location 'global-cache
   ;; Set this if you'd like to use ctags options generated by Citre
   ;; directly, rather than further editing them.
   citre-edit-ctags-options-manually nil
   ;; If you only want the auto enabling citre-mode behavior to work for
   ;; certain modes (like `prog-mode'), set it like this.
   citre-auto-enable-citre-mode-modes '(prog-mode)))
